@{
    ViewBag.Title = "构件库管理";
    Layout = "~/Views/Shared/_LayoutIndex.cshtml";
}
<script type="text/javascript">
    $(document).ready(function () {
        GetTree();
        GetGrid();
        SwitchListAndView();
    });
    //鼠标移动放大图片
    function showBigImg(oEvent, imgPath) {
        bigImg.src = imgPath;
        var oDiv = document.getElementById("BigDiv");
        oDiv.style.visibility = "visible";
        oDiv.style.left = oEvent.clientX + 5;
        oDiv.style.top = oEvent.clientY + 5;
    }
    function leaveBigImg(oEvent) {
        var oDiv = document.getElementById("BigDiv");
        oDiv.style.visibility = "hidden";
    }//鼠标移动放大图片

    //加载左边树
    //注意 FolderId 默认等于1 这样就可以加载一级目录下的子节点文件夹
    var ItemId = "";
    var TreeId = "";
    ItemId = 1, TreeName = "";
    function GetTree() {
        var itemtree = {
            onnodeclick: function (node) {
                TreeId = node.id;            //ID
                TreeName = node.text;
                GridFolderEvent(TreeId);
            },
            url: "@Url.Content("/SteelMember/File/TreeJson")?TreeId=" + ItemId
        };
        $("#ItemsTree").treeview(itemtree);
    };

    //表格文件夹点击事件
    function GridFolderEvent(TreeId) {
        TreeID = TreeId;
        $("#gridTable").jqGrid('setGridParam', {
            url: "@Url.Content("/SteelMember/File/GridListJson")?TreeId=" + TreeId, page: 1
        }).trigger('reloadGrid');
    }

    //加载表格
    function GetGrid() {
        var SelectRowIndx;
        $("#gridTable").jqGrid({
            url: "@Url.Content("/SteelMember/File/GridListJson")?TreeId=" + TreeId,
            datatype: "json",
            height: $(window).height() - 154,
            autowidth: true,
            colModel: [
                    { label: '主键', name: "MemberID", hidden: true },
                    { label: '主键', name: "TreeID", hidden: true },
                    { label: 'Sort', name: "Sort", hidden: true },
                    {
                        label: '图标', name: "Icon", hidden: false, width:5,
                        formatter: function (cellvalue, options, rowObject) {
                            var Icon= cellvalue;
                            if (Icon != "" || Icon != null) {
                                var filename = Icon.substring(0, Icon.lastIndexOf('.'));//获取文件名称，去除后缀名
                                filename = filename + "/" + Icon;
                                if (Icon == "1.png") {
                                    //<div style='cursor:pointer;padding-top:1px;'><img style='padding-bottom:3px;padding-right:2px;' src='../../Content/Scripts/tree/images/folder.gif' onmouseover=\"showBigImg(event,'../../Content/Scripts/tree/images/folder.gif')\" onmouseout=\"leaveBigImg(event)\"/>"</div>
                                    //<img style='width:32px;height:18px;padding-bottom:3px;padding-right:2px;' src='../../Resource/Document/NetworkDisk/System/Member/" + filename + "' onmouseover=\"showBigImg(event,'../../Resource/Document/NetworkDisk/System/Member/" + filename + "')\" onmouseout=\"leaveBigImg(event)\" />";
                                    return "<img style='width:44px;height:32px;' src='../../Resource/Document/NetworkDisk/System/Member/baton.png'onmouseover=\"showBigImg(event,'../../Resource/Document/NetworkDisk/System/Member/baton.png')\"onmouseout=\"leaveBigImg(event)\"/>";
                                } else {
                                    return "<img style='width:44px;height:32px;' src='../../Resource/Document/NetworkDisk/System/Member/" + filename + "' onmouseover=\"showBigImg(event,'../../Resource/Document/NetworkDisk/System/Member/" + filename + "')\" onmouseout=\"leaveBigImg(event)\" />";
                                }
                            }else {
                                return "";
                            }
                        }
                    },
                    { label: '编号', name: "MemberNumbering", index: "MemberNumbering", align: 'center',width: 15 },
                    { label: '型号', name: "MemberModel", index: "MemberModel", align: 'center',width: 6 },
                     {
                         label: '入库时间', name: "UploadTime", index: "UploadTime", align: 'center',width: 10,
                         formatter: function (cellvalue, options, rowObject) {
                             return formatDate(cellvalue, 'yyyy-MM-dd hh:mm:ss');
                         }
                     },
                    { label: '截面面积/<Br/>cm²', name: "SectionalArea", index: "SectionalArea", align: 'center',width: 6, },
                    { label: '外表面积/(m²/m)', name: "SurfaceArea", index: "SurfaceArea", align: 'center',width: 6, },
                    { label: '理论重量/(㎏/m)', name: "TheoreticalWeight", index: "TheoreticalWeight", align: 'center',width: 6, },
                    { label: '高度', name: "SectionalSize_h", index: "SectionalSize_h", align: 'center',width: 5 },
                    //{ label: '长边宽度', name: 'SectionalSizeB', index: 'SectionalSizeB', align: 'center',width: 8 },
                    { label: '腿宽度', name: 'SectionalSize_b', index: 'SectionalSize_b', align: 'center',width: 5 },
                    //{ label: '长边厚度', name: 'SectionalSizeD', index: 'SectionalSizeD', align: 'center',width: 8 },
                    { label: '腰厚度', name: 'SectionalSize_d', index: 'SectionalSize_d', align: 'center',width: 5 },
                    //{ label: '平均腿厚度', name: 'SectionalSize_t', index: 'SectionalSize_t', align: 'center',width: 8 },
                    //{ label: '内圆弧半径', name: 'SectionalSize_r', index: 'SectionalSize_r', align: 'center',width: 8 },
                    //{ label: '腿端圆弧半径', name: 'SectionalSize_r1', index: 'SectionalSize_r1', align: 'center',width: 8 },
                    {
                        label: '图纸', name: 'CAD_Drawing', index: 'CAD_Drawing', align: 'center',width: 5,
                        formatter: function (cellvalue, value, row, index) {
                            var is_have_drawing = cellvalue;
                            if (is_have_drawing != "" || is_have_drawing != null) {
                                if (is_have_drawing != "1.png") {
                                    return "<img src='../../Content/Images/checkokmark.gif'/>";
                                } else {
                                    return "<img src='../../Content/Images/checknomark.gif'/>";
                                }
                            } else {
                                return "";
                            }
                        }
                    },
                    {
                        label: '模型', name: 'Model_Drawing', index: 'Model_Drawing', align: 'center',width: 5,
                        formatter: function (cellvalue, value, row, index) {
                            var is_have_model = cellvalue;
                            if (is_have_model != "" || is_have_model != null) {
                                if (is_have_model != "1.png") {
                                    return "<img src='../../Content/Images/checkokmark.gif'/>";
                                } else {
                                    return "<img src='../../Content/Images/checknomark.gif'/>";
                                }
                            } else {
                                return "";
                            }
                        }
                    },
                     {
                         label: '材料', name: 'IsRawMaterial', index: 'IsRawMaterial', align: 'center',width: 5,
                         formatter: function (cellvalue, value, row, index) {
                             var IsRawMaterial = cellvalue;
                             if (IsRawMaterial != 0) {
                                 return "<img src='../../Content/Images/checkokmark.gif'/>";
                             } else {
                                 return "<img src='../../Content/Images/checknomark.gif'/>";
                             }
                         }
                     },
                    {
                        label: '制程', name: 'IsProcess', index: 'IsProcess', align: 'center',width: 5,
                        formatter: function (cellvalue, value, row, index) {
                            var IsProcess = cellvalue;
                            if (IsProcess != 0) {
                                return "<img src='../../Content/Images/checkokmark.gif'/>";
                            } else {
                                return "<img src='../../Content/Images/checknomark.gif'/>";
                            }
                        }
                    },
            ],
            rowNum: 30,
            sortname: 'SortCode',
            sortorder: 'Desc',//降序 asc升序
            pager: "#gridPager",
            viewrecords: true,
            rownumbers: true,
            gridview: true,
            rowList: [15, 30, 50, 100, 500, 1000],
            ondblClickRow: function (TreeId) {
                var rowData = $("#gridTable").getRowData(TreeId);  //根据ID拿到一行的数据
                if (rowData.Icon == '-1') {
                    GridFolderEvent(rowData.TreeId);
                    var treeid = "ItemsTree_" + rowData.TreeId.replace(/-/g, '_');
                    $('#' + treeid + ' img').trigger("click");
                }
            },
            onSelectRow: function () {
                SelectRowIndx = GetJqGridRowIndx("#" + this.id);
            },
            gridComplete: function () {
                var ids = $("#gridTable").getDataIDs();
                for (var i = 0; i < ids.length; i++) {
                    var rowData = $("#gridTable").getRowData(ids[i]);
                    if (rowData.Enabled == "无效") {//如果无效，则背景色置于红色
                        $('#' + ids[i]).find("td").addClass("SelectBG");
                    }
                }
                $("#" + this.id).jqGrid('setSelection', SelectRowIndx);
            }
        });
        //实现２行表头脚本
        $("#gridTable").jqGrid('setGroupHeaders', {
            useColSpanStyle: true,
            groupHeaders: [
                { startColumnName: 'SectionalSize_h', numberOfColumns: 3, titleText: '截面尺寸/㎜' },
                { startColumnName: 'IsHaveDrawing', numberOfColumns: 2, titleText: '可视化状态' },
                //{ startColumnName: 'InertiaRadius_x', numberOfColumns: 5, titleText: '惯性半径/cm' },
                //{ startColumnName: 'SectionalModulus_x', numberOfColumns: 5, titleText: '截面模数/cm³' },
                //{ startColumnName: 'GravityCenterDistance_0', numberOfColumns: 3, titleText: '重心距离/cm' },
            ]
        })

        columnModelData("#gridTable");
        //自应高度
        $(window).resize(function () {
            $("#gridTable").setGridHeight($(window).height() - 200);
        });
    }

    //构件图纸
    function btn_cad_drawing() {
        var KeyValue = GetJqGridRowValue("#gridTable", "MemberID");
        var Sort = GetJqGridRowValue("#gridTable", "Sort");
        var CAD_Drawing = GetJqGridRowValue("#gridTable", "CAD_Drawing");
        if (IsChecked(KeyValue)) {
            if (CAD_Drawing.replace(/"/, "'").replace(/"/, "'") == "<img src='../../Content/Images/checkokmark.gif'>") {
                if (Sort == "1") {
                    var url = '/SteelMember/File/CADDrawingManagement?KeyValue=' + KeyValue;
                    Dialog(url, "DrawingManagement", "构件图纸", 900, 890, function (iframe) {
                        top.frames[iframe].AcceptClick()
                    });
                } else {
                    alertDialog("请选择构件", 0);
                }
            } else { alertDialog("该构件无图纸", 0); }
        }
    }

    //模型管理
    function btn_model_drawing() {
        var KeyValue = GetJqGridRowValue("#gridTable", "MemberID");
        var Sort = GetJqGridRowValue("#gridTable", "Sort");
        var Model_Drawing = GetJqGridRowValue("#gridTable", "Model_Drawing");

        if (IsChecked(KeyValue)) {
            if (Model_Drawing.replace(/"/, "'").replace(/"/, "'") == "<img src='../../Content/Images/checkokmark.gif'>") {
                if (Sort == "1") {
                    var url = '/SteelMember/File/ModelDrawingManagement?KeyValue=' + KeyValue;
                    Dialog(url, "DrawingManagement", "三维模型管理", 900, 890, function (iframe) {
                        top.frames[iframe].AcceptClick()
                    });
                } else {
                    alertDialog("请选择构件", 0);
                }
            } else { alertDialog("该构件无三维模型", 0); }
        }
    }

    //按钮刷新表格树
    function btn_reload() {
        GetTree();
        $("#gridTable").trigger("reloadGrid"); //重新载入
    }
    //刷新
    function windowload() {
        $("#gridTable").trigger("reloadGrid"); //重新载入 
    }

    //新建构件
    function btn_add() {
        var ItemID = GetQuery("ItemID");
        var Sort = GetJqGridRowValue("#gridTable", "Sort");
        if (!!TreeId) {
            if (Sort == "1") {
                tipDialog('请选择文件夹目录。', 4, 'warning');
            } else {
                var url = "/SteelMember/File/MemberForm?TreeId=" + TreeId + '&&ItemID=' + ItemID;
                openDialog(url, "MemberForm", "新增信息", 600, 400, function (iframe) {
                    top.frames[iframe].AcceptClick()
                });
            }
        } else if (!!ItemID) {
            var url = "/SteelMember/File/MemberForm?FolderId=" + ItemID + '&ItemID=' + ItemID;
            openDialog(url, "FolderForm", "新增信息", 600, 400, function (iframe) {
                top.frames[iframe].AcceptClick()
            });
        }
        else {
            tipDialog('请选择文件夹目录。', 4, 'warning');
        }
        $("#gridTable").trigger("reloadGrid"); //重新载入
    }

    //编辑构件信息(得到实体)
    function btn_edit() {
        var KeyValue = GetJqGridRowValue("#gridTable", "MemberID");
        var Sort = GetJqGridRowValue("#gridTable", "Sort");
        if (Sort == "1") {
            if (IsChecked(KeyValue)) {
                var url = "/SteelMember/File/MemberForm?KeyValue= " + KeyValue;
                openDialog(url, "MemberForm", "编辑信息", 600, 400, function (iframe) {
                    top.frames[iframe].AcceptClick();
                });
            }
        } else {
            alertDialog("请选择文件！", 0);
        }
    }

    //数控参数
    function btn_parameter() {
        var KeyValue = GetJqGridRowValue("#gridTable", "MemberID");
        var Sort = GetJqGridRowValue("#gridTable", "Sort");
        if (Sort == "1") {
            if (IsChecked(KeyValue)) {
                var url = "/SteelMember/File/CNCParameterForm?KeyValue= " + KeyValue;
                Dialog(url, "CNCParameterForm", "信息", 600, 400, function (iframe) {
                    top.frames[iframe].AcceptClick();
                });
            }
        } else {
            alertDialog("请选择文件！", 0);
        }
        $("#gridTable").trigger("reloadGrid"); //重新载入
    }

    //删除构件信息(得到实体)
    function btn_delete() {
        var KeyValue = GetJqGridRowValue("#gridTable", "MemberID");
        var Sort = GetJqGridRowValue("#gridTable", "Sort");
        if (Sort == "1") {
            if (IsChecked(KeyValue)) {
                delConfig('/SteelMember/File/DeleteMember', { KeyValue: KeyValue }, KeyValue.split(",").length);
            }
        } else {
            alertDialog("请选择文件！", 0);
        }
    }


    //查询
    var QueryParamJson = "";
    function btn_query() {
        QueryDialog("/SteelMember/File/QueryPage", "QueryPage", "查询", 540, 30, function (iframe) {
            top.frames[iframe].QueryClick(function (JsonData) {
                QueryParamJson = JsonData;
                $("#gridTable").jqGrid('setGridParam', {
                    url: "@Url.Content("/SteelMember/File/GridListJson")?ParameterJson=" + escape(JsonData) + "&TreeID=" + TreeId, page: 1
                }).trigger('reloadGrid');
            });
        });
    }

    //构件材料用量
    function btn_raw_materials_dosage() {
        var MemberID = GetJqGridRowValue("#gridTable", "MemberID");
        if (IsChecked(MemberID)) {
            var url = "/SteelMember/File/RawMaterialsDosageIndex?MemberID= " + MemberID;
            Dialog(url, "RawMaterialsDosageIndex", "材料用量", 900, 435, function (iframe) {
                top.frames[iframe].AcceptClick();
            });
        }
    }//  AddTabMenu("OrderForm", "Url.Content("/SteelMember/ProjectOrder/CreateOrderForm")?TreeId=" + TreeId, "新增订单", "page_white_add.png", true, true, true);

    //构件制程
    function btn_member_process() {
        var MemberID = GetJqGridRowValue("#gridTable", "MemberID");
        if (IsChecked(MemberID)) {
            var url = "/SteelMember/File/MemberProcessIndex?MemberID= " + MemberID;
            Dialog(url, "MemberProcessIndex", "构件制程", 900, 435, function (iframe) {
                top.frames[iframe].AcceptClick();
            });
        }
    }

    //上传图标
    function btn_upload() {
        var Images = "Images"
        var url = "/SteelMember/File/UpLoadFile?Images=" + Images;
        Dialog(url, "UpLoadFile", "上传图标", 500, 600, function (iframe) {
            top.frames[iframe].AcceptClick()
            $("#gridTable").trigger("reloadGrid"); //重新载入
        });
    }


    //导入文件
    function btn_import() {
        if (!!TreeId) {
            var url = "/SteelMember/File/ImportFile?KeyValue=" + TreeId;
            Dialog(url, "ImportFile", "导入数据", 500, 600, function (iframe) {
                top.frames[iframe].AcceptClick()
            });
        }
        else {
            tipDialog('请选择文件夹目录。', 4, 'warning');
        }
    }
       var JsonData1 = "";  var TableObject ="";
    //导出文件
    function btn_derive() {
        SetDeriveExcel("#gridTable", "构件信息表", "云南公投澄川高速", JsonData1,TableObject.toString());
        openDialog("/SteelMember/File/DeriveFile", "DeriveFile", "构件信息导出", 900, 500, function (iframe) {
            top.frames[iframe].AcceptClick();
        })
        //var url = "/SteelMember/File/ImportFile?KeyValue=" + TreeId;
        //Dialog(url, "ImportFile", "上传文件到网络硬盘", 500, 600, function (iframe) {
        //    top.frames[iframe].AcceptClick()
        //    $("#gridTable").trigger("reloadGrid"); //重新载入
        //});
    }

    /*视图begin=========================================================================*/
    //切换到列表/视图
    function SwitchListAndView() {
        $('#grid_View').height($(window).height() - 78)
        $('.switch-btns li').click(function () {
            $('.switch-btns li').removeClass('selected');
            $(this).addClass('selected');
            if ($(this).attr('id') == 'li-switch-list') {
                $(this).find('div').addClass('icon-btn-switch-list-select');
                $("#li-switch-view").find('div').addClass('icon-btn-switch-view');
                $("#li-switch-view").find('div').removeClass('icon-btn-switch-view-select');
                $('#grid_List').show();
                $('#grid_View').hide();
            }
            //显示视图
            if ($(this).attr('id') == 'li-switch-view') {
                $(this).find('div').addClass('icon-btn-switch-view-select');
                $("#li-switch-list").find('div').addClass('icon-btn-switch-list');
                $("#li-switch-list").find('div').removeClass('icon-btn-switch-list-select');
                $('#grid_List').hide();
                $('#grid_View').show();
                var data = $("#gridTable").jqGrid("getRowData");
                var html = "";
                for (var i = 0; i < data.length; i++) {
                    var icon = data[i].icon;
                    if (icon == "-1") {
                        icon = "Folder";
                    }
                    html += '<div class="filelist-item">';
                    html += '<div><img src="../../Content/Images/fileType/' + icon + '_72.png" /></div>';
                    html += '<div title="' + data[i].fullname + '" class="filelist-text">' + data[i].fullname + '</div>';
                    html += '</div>';
                }
                $("#grid_View").html(html);
            }
        })
    }
</script>
<div id="layout" class="layout">
    <!--左边-->
    <div class="layoutPanel layout-west">
        <div class="btnbartitle">
            <div>
                构件类型
            </div>
        </div>
        <div class="ScrollBar" id="ItemsTree"></div>
    </div>
    <!--中间-->
    <div class="layoutPanel layout-center">

        <div class="btnbartitle">
            <div>
                构件列表<span id="CenterTitle"></span>
            </div>
        </div>
        <div class="tools_bar" style="border-top: none; margin-bottom: 0px;">
            <div class="PartialButton">
                @Html.Partial("_PartialButton")
            </div>
        </div>
        <div id="BigDiv" style="margin-left:50px;margin-top:160px; width:360px;height:360px; position: absolute; visibility: hidden; padding: 5px;z-index:999">
            <img id="bigImg" src="" style="width:100%;height:100%" />
        </div>
        <table id="gridTable"></table>
        <div id="gridPager"></div>
    </div>

</div>

